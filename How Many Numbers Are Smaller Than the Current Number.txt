class Solution {//O(n^2)
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) {
        int n=nums.size();
        vector<int> c(n,0);
        for(int i=0;i<nums.size();i++)
        {
            for(int j=0;j<nums.size();j++)
            {
                if(j!=i)
                {if(nums[j] < nums[i])
                    c[i]++;}
             
            }
        }
        return c;
    }
};

optimised approach-O(n)
class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& nums) 
    {
        map<int,int> m;
        vector<int> c=nums,an;
        sort(c.begin(),c.end());
        
        for(int i=(nums.size()-1);i>=0;i--)
        {  m[c[i]]=i;}
        
        for(int i=0;i<nums.size();i++)
        { an.push_back(m[nums[i]]);
        }
        
        return an;
    }
};
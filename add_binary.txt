class Solution {
//greater time complexity
public:
    string addBinary(string a, string b) 
    {
        string s;
        int i=a.size()-1, j=b.size()-1,cn=0;
       while((i>=0)&&(j>=0))
       {
           if(cn==0)
           {
               if(a[i]=='1')
               {
                   if(b[j]=='0')
                        s.push_back('1');
                    else
                    {
                        s.push_back('0');
                        cn=1;
                    }
               }
               else
               {
                  if(a[i]=='0')
                  {
                       if(b[j]=='0')
                            s.push_back('0');
                        else
                            s.push_back('1');
                          
                  }    
               }
           }
           else
           {
               if(a[i]=='1')
               {
                   if(b[j]=='0')
                       s.push_back('0');
                    else
                        s.push_back('1');
               }
                else if(a[i]=='0')
                  {
                       if(b[j]=='0')
                       {
                            s.push_back('1');
                            cn=0;
                        }  
                        else
                            s.push_back('0');  
                  }
                 
            }
            i--;
            j--;
       }
        while(i>=0)
        {
            if(cn==0)
                s.push_back(a[i]);  
            else
            {
                if(a[i]=='0')
                {
                    s.push_back('1');
                    cn=0;
                }
                else
                    s.push_back('0');
            }
            i--;
        }
                   
        while(j>=0)
        {
            if(cn==0)
                s.push_back(b[j]);
            else
            {
                if(b[j]=='0')
                {
                    s.push_back('1');
                    cn=0;
                }
                else
                    s.push_back('0'); 
            }
            j--;
        }
        
                
        if(cn==1)
            s.push_back('1'); 
        
        reverse(s.begin(),s.end());
    return s;
    }
};

---less time complexity-----
class Solution 
{
public:
    string addBinary(string a, string b) 
    {
        string s="";
        int i=a.size()-1, j=b.size()-1,c=0,sum;
        
       while((i>=0)||(j>=0))
       {
           sum=c;
           if(i>=0)
               sum+=a[i--]-'0';//char values work on ASCII values 
           if(j>=0)
                sum+=b[j--]-'0';
           c=sum>1?1:0;
           s+=to_string(sum%2);
       }
        
        if(c==1)
            s+=to_string(c);
        reverse(s.begin(),s.end());
    return s;
    }
};